trigger:
  branches:
    include:
    - master
  tags:
    include:
    - '*'
pr:
- master

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  runCodesignValidationInjection: false

strategy:
  matrix:
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:

- task: NodeTool@0
  displayName: 'Use Node 10.x'
  inputs:
    versionSpec: 10.x

- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
       npm | "$(Agent.OS)"
       npm
    path: $(npm_config_cache)
  displayName: Cache npm


- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: false

- task: Npm@1
  displayName: 'TSLint'
  inputs:
    command: custom
    verbose: false
    customCommand: run lint
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

- bash: |
    VSCODE_DOCS_BUILD_EXTENSION_GITHUB_TOKEN=$(VSCODE_DOCS_BUILD_EXTENSION_GITHUB_TOKEN) VSCODE_DOCS_BUILD_EXTENSION_BUILD_USER_TOKEN=$(VSCODE_DOCS_BUILD_EXTENSION_BUILD_USER_TOKEN) npm run test
  displayName: Run Test(Mac)
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

- powershell: |
    $env:VSCODE_DOCS_BUILD_EXTENSION_GITHUB_TOKEN="$(VSCODE_DOCS_BUILD_EXTENSION_GITHUB_TOKEN)"
    $env:VSCODE_DOCS_BUILD_EXTENSION_BUILD_USER_TOKEN="$(VSCODE_DOCS_BUILD_EXTENSION_BUILD_USER_TOKEN)"
    npm run test
  displayName: Run Test(Windows)
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

- bash: ./node_modules/.bin/codecov -f coverage/unit/lcov.info -F unit
  displayName: 'Report unit test coverage'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))
  env:
    CODECOV_TOKEN: $(CODECOV_TOKEN)

- bash: |
    npm run publish -- -p $(VSCODE_MARKETPLACE_TOKEN)
  displayName: 'Publish'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Agent.OS'], 'Windows_NT'))